<footer class="main-footer font-xs">
    <div class="row pb-30 pt-15">
        <div class="col-sm-6">
            <script>
            document.write(new Date().getFullYear())
            </script> Â©, Evara - HTML Ecommerce Template .
        </div>
        <div class="col-sm-6">
            <div class="text-sm-end">
                All rights reserved
            </div>
        </div>
    </div>
</footer>
</main>
<script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="assets/js/vendors/select2.min.js"></script>
<script src="assets/js/vendors/perfect-scrollbar.js"></script>
<script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
<script src="assets/js/vendors/chart.js"></script>
<!-- Main Script -->
<script src="assets/js/main.js" type="text/javascript"></script>
<script src="assets/js/custom-chart.js" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js"></script>

<!-- Active Menu Script -->
<script>
    document.querySelectorAll('.menu-link').forEach(link => {
        if (link.href === window.location.href) {
            link.parentElement.classList.add('active');
        } else {
            link.parentElement.classList.remove('active');
        }
    });
</script>

<script>
    document.getElementById('generateCode').onclick = function () {
        const randomCode = 'CP' + Math.random().toString(36).substr(2, 8).toUpperCase();
        document.getElementById('couponCode').value = randomCode;
        console.log(`generate code ${randomCode}`);
    };

    document.addEventListener('DOMContentLoaded', function () {
        const today = new Date();
        const tomorrow = new Date(today);
        tomorrow.setDate(tomorrow.getDate() + 1);
        const formattedDate = tomorrow.toISOString().split('T')[0];

        const expirationDateInput = document.getElementById('expirationDate');
        expirationDateInput.value = formattedDate;
        expirationDateInput.min = formattedDate;

        const minimumAmountInput = document.getElementById('minPurchaseAmount');
        const maximumAmountInput = document.getElementById('maxPurchaseAmount');
        maximumAmountInput.min = minimumAmountInput.value;
    });

    function validateInput(inputId, pattern, errorId, errorMessage) {
        const inputValue = document.getElementById(inputId).value.trim();
        const errorElement = document.getElementById(errorId);

        if (inputValue === '') {
            errorElement.innerText = errorMessage + ' is required.';
            return false;
        } else if (pattern && !pattern.test(inputValue)) {
            errorElement.innerText = 'Please enter a valid ' + errorMessage.toLowerCase() + '.';
            return false;
        } else {
            errorElement.innerText = '';
            return true;
        }
    }

    function validateDescription() {
        const description = document.getElementById('description').value.trim();
        const descriptionError = document.getElementById('descriptionError');
        const descriptionPattern = /^[a-zA-Z0-9\s,.'-]*$/;

        if (description === '') {
            descriptionError.innerText = 'Description is required.';
            return false;
        } else if (!descriptionPattern.test(description)) {
            descriptionError.innerText = 'Description can only contain letters, numbers, spaces, and ,.\'- characters.';
            return false;
        } else if (description.length > 40) {
            descriptionError.innerText = 'Description must be less than 40 characters.';
            return false;
        } else {
            descriptionError.innerText = '';
            return true;
        }
    }

    function validateAmounts() {
        const minimumAmount = parseFloat(document.getElementById('minPurchaseAmount').value);
        const maximumAmount = parseFloat(document.getElementById('maxPurchaseAmount').value);
        const minimumAmountError = document.getElementById('minimumAmountError');
        const maximumAmountError = document.getElementById('maximumAmountError');

        if (isNaN(minimumAmount) || isNaN(maximumAmount) || minimumAmount < 0 || maximumAmount < 0) {
            minimumAmountError.innerText = 'Minimum and maximum amounts must be non-negative numbers.';
            maximumAmountError.innerText = 'Minimum and maximum amounts must be non-negative numbers.';
            return false;
        } else if (minimumAmount >= maximumAmount) {
            minimumAmountError.innerText = 'Minimum amount must be less than maximum amount.';
            maximumAmountError.innerText = 'Maximum amount must be greater than minimum amount.';
            return false;
        } else {
            minimumAmountError.innerText = '';
            maximumAmountError.innerText = '';
            return true;
        }
    }

    function validateDiscountPercentage() {
        const discountPercentageInput = document.getElementById('discountPercentage');
        const discountPercentage = parseFloat(discountPercentageInput.value.trim());
        const discountPercentageError = document.getElementById('discountPercentageError');

        if (discountPercentageInput.value.trim() === '') {
            discountPercentageError.innerHTML = "Discount percentage is required";
        } else if (isNaN(discountPercentage) || discountPercentage < 5 || discountPercentage > 65) {
            discountPercentageError.innerHTML = "Discount percentage should be between 5% and 65%";
        } else {
            discountPercentageError.innerHTML = "";
        }
    }

    function validateMaxUsers() {
        const maxUsersInput = document.getElementById('maxUsers');
        const maxUsersError = document.getElementById('maxUsersError');
        const maxUsers = parseInt(maxUsersInput.value.trim());

        if (maxUsersInput.value.trim() === '') {
            maxUsersError.innerText = "Maximum users allowed is required";
            return false;
        } else if (isNaN(maxUsers) || maxUsers < 1 || maxUsers > 10) {
            maxUsersError.innerText = "Maximum users allowed should be between 1 and 10";
            return false;
        } else {
            maxUsersError.innerText = '';
            return true;
        }
    }

    function clearErrorMessage(event) {
        const input = event.target;
        const errorElement = document.getElementById(input.id + 'Error');
        errorElement.innerText = '';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const descriptionInput = document.getElementById('description');
        const discountPercentage = document.getElementById('discountPercentage');
        const minAmountInput = document.getElementById('minPurchaseAmount');
        const maxAmountInput = document.getElementById('maxPurchaseAmount');
        const maxUsersInput = document.getElementById('maxUsers');

        descriptionInput.addEventListener('blur', validateDescription);
        discountPercentage.addEventListener('blur', validateDiscountPercentage);
        minAmountInput.addEventListener('blur', validateAmounts);
        maxAmountInput.addEventListener('blur', validateAmounts);
        maxUsersInput.addEventListener('blur', validateMaxUsers);

        const inputs = [descriptionInput, discountPercentage, minAmountInput, maxAmountInput, maxUsersInput];

        inputs.forEach(input => {
            input.addEventListener('focus', clearErrorMessage);
        });
    });

    document.getElementById('generateCode').addEventListener('click', function () {
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
        const codeLength = 8;
        let randomCode = '';

        for (let i = 0; i < codeLength; i++) {
            const randomIndex = Math.floor(Math.random() * characters.length);
            randomCode += characters.charAt(randomIndex);
        }

        document.getElementById('couponCode').value = randomCode;
    });

    function submitForm(event) {
        event.preventDefault();

        const isValid = validateDescription() && validateAmounts() && validateMaxUsers() && validateDiscountPercentage();

        if (!isValid) {
            document.getElementById('main-error').innerText = 'Please correct the fields.';
            return;
        }

        const maxUsersInput = document.getElementById('maxUsers');
        if (maxUsersInput.value.trim() === '') {
            document.getElementById('maxUsersError').innerText = "Maximum users allowed is required";
            return;
        }

        addCoupon(); 
    }

    function addCoupon() {
        const maxUsersInput = document.getElementById('maxUsers');
        const maxUsersError = document.getElementById('maxUsersError');
        const maxUsers = maxUsersInput.value.trim();

        if (maxUsers === '') {
            maxUsersError.innerText = "Maximum users allowed is required";
            return; 
        }

        const description = document.getElementById('description').value;
        const name = document.getElementById('couponName').value;
        const code = document.getElementById('couponCode').value;
        const discountPercentage = document.getElementById('discountPercentage').value;
        const minPurchaseAmount = document.getElementById('minPurchaseAmount').value;
        const maxPurchaseAmount = document.getElementById('maxPurchaseAmount').value;
        const expirationDate = document.getElementById('expirationDate').value;

        const formObject = {
            description: description,
            name: name,
            code: code,
            discountPercentage: discountPercentage,
            minPurchaseAmount: minPurchaseAmount,
            maxPurchaseAmount: maxPurchaseAmount,
            expirationDate: expirationDate,
            maxUsers: maxUsers
        };

        console.log(formObject);

        fetch('/admin/create-coupon', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(formObject),
        })
            .then(response => response.json())
            .then(data => {
                if (data.success == true) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Coupon created successfully.',
                        icon: 'success',
                        confirmButtonText: 'Cool'
                    }).then(() => {
                        window.location.href = '/admin/coupon';
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message || 'Failed to create coupon.',
                        icon: 'error',
                        confirmButtonText: 'Try Again'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while creating the coupon.',
                    icon: 'error',
                    confirmButtonText: 'Try Again'
                });
            });
    }
</script>

<script>
    document.getElementById("dateFilter").addEventListener("submit", function(event) {
        event.preventDefault();
        if (validateAndSubmit()) {
            this.submit();
        }
      });

      function validateAndSubmit() {
        if (validateForm()) {
            return true;
        } else {
            return false;
        }
      }


      function validateForm() {
        resetErrorMessage();
      console.log("Its start to working");
        let isValid = true;
        
        const startingDate = document.getElementById("startdate").value.trim();
        const endingDate = document.getElementById("enddate").value.trim();

        if(startingDate === ""){
            displayErrorMessage("startingDate-error","Enter Starting date");
            isValid = false
        }
        
        if(endingDate === ""){
            displayErrorMessage("endingDate-error","Enter Ending date");
            isValid = false;
        }else if(endingDate < startingDate){
            displayErrorMessage("endingDate-error","Should greater than starting date");
            isValid = false
        }
      
        return isValid;
      }
      function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
        errorElement.style.color = "red";
      }
      
      function resetErrorMessage() {
        var errorElements = document.querySelectorAll(".error-message");
        errorElements.forEach(function(element) {
            element.innerText = "";
            element.style.display = "none";
        });
      }

</script>

<script>
    function downloadPdf() {
        console.log('pdf download');
        
        const salesReport = document.getElementById("salesTable");
        const opt = {
            margin: 1,
            filename: 'sales_report.pdf',
            image: { type: 'jpeg', quality: 0.98 },
            html2canvas: { scale: 2 },
            jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
        };
        html2pdf().from(salesReport).set(opt).save();
    }

    function downloadExcel() {
        console.log('excel download');
        
        const salesReport = document.getElementById("salesTable");
        const ws = XLSX.utils.table_to_sheet(salesReport);
        const wb = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(wb, ws, "Sales Report");
        XLSX.writeFile(wb, "sales_report.xlsx");
    }
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format
        document.getElementById('startdate').setAttribute('max', today);

        const form = document.getElementById('dateFilter');
        
        form.addEventListener('submit', function(event) {
            event.preventDefault();

            const startDate = document.getElementById('startdate').value.trim();
            const endDate = document.getElementById('enddate').value.trim();
            
            clearErrors();

            let isValid = true;

            // Validate Starting Date
            if (startDate === '') {
                showError('startingDate-error', 'Starting Date is required');
                isValid = false;
            } else {
                const start = new Date(startDate);
                if (start > new Date()) {
                    showError('startingDate-error', 'Starting Date cannot be in the future');
                    isValid = false;
                }
            }

            // Validate Ending Date
            if (endDate === '') {
                showError('endingDate-error', 'Ending Date is required');
                isValid = false;
            } else {
                const start = new Date(startDate);
                const end = new Date(endDate);
                if (startDate && start > end) {
                    showError('startingDate-error', 'Starting Date cannot be after Ending Date');
                    showError('endingDate-error', 'Ending Date cannot be before Starting Date');
                    isValid = false;
                }
            }

            if (isValid) {
                form.submit();
            }
        });
    });

    function showError(id, message) {
        const errorDiv = document.getElementById(id);
        errorDiv.textContent = message;
        errorDiv.style.display = 'block';
    }

    function clearErrors() {
        const errorDivs = document.querySelectorAll('.error-message');
        errorDivs.forEach(function(errorDiv) {
            errorDiv.textContent = '';
            errorDiv.style.display = 'none';
        });
    }
</script>   
<script>
    document.getElementById("categoryForm").addEventListener("submit", function (e) {
        e.preventDefault();

        const name = document.getElementById("product_name").value.trim();
        const description = document.getElementById("description").value.trim();

        const nameError = document.getElementById("nameError");
        const descriptionError = document.getElementById("descriptionError");

        nameError.textContent = "";
        descriptionError.textContent = "";

        let isValid = true;

        if (name === "") {
            nameError.textContent = "Name is required.";
            isValid = false;
        } else if (name.length < 3) {
            nameError.textContent = "Name must be at least 3 characters long.";
            isValid = false;
        }

        if (description === "") {
            descriptionError.textContent = "Description is required.";
            isValid = false;
        } else if (description.length < 10) {
            descriptionError.textContent = "Description must be at least 10 characters long.";
            isValid = false;
        }

        if (isValid) {
            this.submit();
        }
    });
</script>

<!--category offer validation-->
<script>
    // JavaScript Validation
    document.getElementById('catOfferForm').addEventListener('submit', function(event) {
        let valid = true;
    
        // Reset error messages
        document.getElementById('catOfferName-error').textContent = '';
        document.getElementById('catStartingDate-error').textContent = '';
        document.getElementById('catEndingDate-error').textContent = '';
        document.getElementById('category-error').textContent = '';
        document.getElementById('catDiscount-error').textContent = '';
    
        // Validate Offer Name
        const name = document.getElementById('name').value.trim();
        if (!name) {
            valid = false;
            document.getElementById('catOfferName-error').textContent = 'Offer name is required.';
        }
    
        // Validate Starting Date
        const startingDate = document.getElementById('catStartingDate').value.trim();
        if (!startingDate) {
            valid = false;
            document.getElementById('catStartingDate-error').textContent = 'Starting date is required.';
        }
    
        // Validate Ending Date
        const endingDate = document.getElementById('catEndingDate').value.trim();
        if (!endingDate) {
            valid = false;
            document.getElementById('catEndingDate-error').textContent = 'Ending date is required.';
        } else if (new Date(endingDate) < new Date(startingDate)) {
            valid = false;
            document.getElementById('catEndingDate-error').textContent = 'Ending date cannot be before the starting date.';
        }
    
        // Validate Category
        const category = document.getElementById('category').value.trim();
        if (!category) {
            valid = false;
            document.getElementById('category-error').textContent = 'Category is required.';
        }
    
        // Validate Category Discount
        const categoryDiscount = document.getElementById('categoryDiscount').value.trim();
        if (!categoryDiscount) {
            valid = false;
            document.getElementById('catDiscount-error').textContent = 'Category discount is required.';
        } else if (isNaN(categoryDiscount) || parseFloat(categoryDiscount) <= 0) {
            valid = false;
            document.getElementById('catDiscount-error').textContent = 'Please enter a valid discount value.';
        }
    
        // If validation fails, prevent form submission
        if (!valid) {
            event.preventDefault();
        }
    });
    </script>
</body>

</html>